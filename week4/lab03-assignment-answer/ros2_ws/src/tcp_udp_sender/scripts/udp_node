#!/usr/bin/env python3

import rclpy
from rclpy.node import Node
import socket
import struct
import random


class UdpNode(Node):

    def __init__(self):
        super().__init__('udp_node')

        # Create UDP socket
        self.sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        self.server_address = ('127.0.0.1', 5006)

        self.get_logger().info('UDP sender started, sending to port 5006')

        # Create timer to send data every 1 second
        timer_period = 1.0  # seconds
        self.timer = self.create_timer(timer_period, self.timer_callback)

    def timer_callback(self):
        # Generate random uint8 number
        random_number = random.randint(0, 255)

        # Pack as uint8
        packed_data = struct.pack('!B', random_number)

        try:
            self.sock.sendto(packed_data, self.server_address)
            self.get_logger().info(f'Sent: {random_number}')
        except Exception as e:
            self.get_logger().warn(f'Failed to send data: {e}')

    def destroy_node(self):
        self.sock.close()
        super().destroy_node()


def main(args=None):
    rclpy.init(args=args)

    udp_node = UdpNode()

    try:
        rclpy.spin(udp_node)
    except KeyboardInterrupt:
        pass

    # Destroy the node explicitly
    udp_node.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()